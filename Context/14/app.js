let arr = [2,1.1, 2.1, 3.1, 4,8]; //массив длинной в 5 чисел

function recurs(arr, counter, sum) { // arr - массив // counter - счетчик(undefinded на первом запуске) // sum - сумма целых чисел(undefinded на первом запуске)
  if (counter === undefined) { //проверка для первого запуска. Если счетчик undefined, то устанавливаем число равное длинне массива.
    sum = 0 //проверка для первого запуска. Если сумма undefined, то устанавливаем сумму равную нулю.
    counter = arr.length ///проверка для первого запуска. устанавливаем число равное длинне массива.
  }
  if (Number.isInteger(arr[counter])) { //проверяем число из массива на целочисленность. Для этого обращаемся к числу по индексу arr[counter] = массив[счетчик]. 
    // Счетчик с каждым запуском рекурсии уменьшается на единицу, таким образом с каждой итерацией мы будем обращаться к новому числу из массива
    sum += arr[counter] // Если условие на целочисленность сработало. То добавляем число в нашу сумму.
  }

  if (counter === 0) return (sum) // Проверяем, не достиг ли наш счетчик нуля. Если наш счетчик равен нулю и проверять числа нам больше не нужно, 
  // то выходим из рекурсии и возвращаем сумму целочисленных чисел.

  return recurs(arr, counter - 1, sum) // Перезапускаем функцию. Передаем в новую итерацию массив, счетчик и сумму. От счетчика отнимаем 1 чтобы в новой 
  // итерации обращаться к новому числу в массиве.
}
console.log(recurs(arr)) //запуск рекурсии